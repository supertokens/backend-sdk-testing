[
  "(a,n)=>{primaryUserInCallback=a,newAccountInfoInCallback=n};",
  "(a,r)=>{primaryUserInCallback=a};",
  "(i,l,o,d,t)=>t.DO_NOT_LINK||void 0!==l&&l.id===o.getUserId()?{shouldAutomaticallyLink:!1}:{shouldAutomaticallyLink:!0,shouldRequireVerification:!0};",
  "(i,l,o,d,t)=>t.DO_NOT_LINK||void 0!==l&&l.id===o.getUserId()?{shouldAutomaticallyLink:!1}:{shouldAutomaticallyLink:!0,shouldRequireVerification:!1};",
  "(i,l,o,u,a)=>a.DO_LINK?{shouldAutomaticallyLink:!0,shouldRequireVerification:!0}:{shouldAutomaticallyLink:!1};",
  "(i,l,o,u,a)=>a.DO_NOT_LINK?{shouldAutomaticallyLink:!1}:a.DO_LINK_WITHOUT_VERIFICATION?{shouldAutomaticallyLink:!0,shouldRequireVerification:!1}:{shouldAutomaticallyLink:!0,shouldRequireVerification:!0};",
  "(i,l,o,u,a)=>a.DO_NOT_LINK?{shouldAutomaticallyLink:!1}:{shouldAutomaticallyLink:!0,shouldRequireVerification:!1};",
  "(o,l)=>(++info.coreCallCount,o);",
  "({userContext:e,...s})=>{store.emailInputs.push(s)};",
  "a=>({...a,sendEmail:async a=>{userInCallback=a.user}});",
  "a=>({...a,sendEmail:async function(){sendEmailCallbackCalled=!0}});",
  "async R=>({status:\"UNKNOWN_USER_ID_ERROR\"});",
  "async a=>({status:\"OK\",email:\"random@example.com\"});",
  "async t=>\"random\"===t.getAsString()?{status:\"OK\",email:\"test@example.com\"}:{status:\"UNKNOWN_USER_ID_ERROR\"};",
  "async(a,c)=>{userIdInCallback=a,recipeUserIdInCallback=c};",
  "async(i,e)=>{if(\"emailpassword\"===i.recipeId){if(!((await supertokens.listUsersByAccountInfo(\"public\",{email:i.email})).length>1))return{shouldAutomaticallyLink:!1}}return{shouldAutomaticallyLink:!0,shouldRequireVerification:!0}};",
  "async(i,l)=>\"test2@example.com\"===i.email&&void 0===l?{shouldAutomaticallyLink:!1}:{shouldAutomaticallyLink:!0,shouldRequireVerification:!1};",
  "async(i,l,a,o,e)=>e.DO_NOT_LINK||\"test2@example.com\"===i.email&&void 0===l?{shouldAutomaticallyLink:!1}:{shouldAutomaticallyLink:!0,shouldRequireVerification:!0};",
  "async(i,l,a,o,e)=>e.DO_NOT_LINK||\"test2@example.com\"===i.email&&void 0===l?{shouldAutomaticallyLink:!1}:{shouldAutomaticallyLink:!0,shouldRequireVerification:!1};",
  "e=>({...e,createNewSession:async s=>{const{PrimitiveClaim:a}=require(\"supertokens-node/lib/build/recipe/session/claims\");let c=new a({key:\"some-key\",fetchValue:async(e,s)=>{userIdInCallback=e,recipeUserIdInCallback=s}});return s.accessTokenPayload={...s.accessTokenPayload,...c.build(s.userId,s.recipeUserId)},e.createNewSession(s)}});",
  "e=>({...e,exchangeAuthCodeForOAuthTokens:()=>({}),getUserInfo:()=>({thirdPartyUserId:\"user\",email:{id:\"email@test.com\",isVerified:!1},rawUserInfoFromProvider:{}})});",
  "e=>({...e,exchangeAuthCodeForOAuthTokens:({redirectURIInfo:e})=>e,getUserInfo:({oAuthTokens:e})=>({thirdPartyUserId:e.userId??\"user\",email:{id:e.email??\"email@test.com\",isVerified:!0},rawUserInfoFromProvider:{}})});",
  "e=>({...e,sendEmail:async function(e){sendEmailToUserId=e.user.id,sendEmailToUserEmail=e.user.email,sendEmailToRecipeUserId=e.user.recipeUserId}});",
  "e=>({...e,sendEmail:async function(e){sendEmailToUserId=e.user.id,sendEmailToUserEmail=e.user.email}});",
  "i=>({...i,isEmailVerified:e=>(email=e.email,i.isEmailVerified(e))});",
  "i=>({...i,sendEmail:async i=>{token=i.emailVerifyLink.split(\"?token=\")[1].split(\"&rid=\")[0]}});",
  "n=>({...n,sendEmail:async function(n){sendEmailToUserId=n.user.id}});",
  "n=>({...n,signInUpPOST:async function(s){let a=await n.signInUpPOST(s);return\"OK\"===a.status&&(userInCallback=a.user),a}});",
  "r=>({...r,exchangeAuthCodeForOAuthTokens:({redirectURIInfo:r})=>r,getUserInfo:({oAuthTokens:r})=>{if(r.error)throw new Error(\"Credentials error\");return{thirdPartyUserId:r.userId??\"userId\",email:r.email&&{id:r.email,isVerified:!0===r.isVerified},rawUserInfoFromProvider:{}}}});",
  "s=>({...s,passwordResetPOST:async e=>{let t=await s.passwordResetPOST(e);return\"OK\"===t.status&&(emailPostPasswordReset=t.email,userPostPasswordReset=t.user),t}});",
  "s=>({...s,passwordResetPOST:async e=>{let t=await s.passwordResetPOST({...e,userContext:{...e.userContext,DO_NOT_LINK:!0}});return\"OK\"===t.status&&(emailPostPasswordReset=t.email,userPostPasswordReset=t.user),t}});",
  "s=>({...s,sendEmail:async function(s){sendEmailToUserId=s.user.id,sendEmailToUserEmail=s.user.email,token=s.passwordResetLink.split(\"?\")[1].split(\"&\")[0].split(\"=\")[1]}});",
  "s=>({...s,sendEmail:async function(s){sendEmailToUserId=s.user.id,token=s.passwordResetLink.split(\"?\")[1].split(\"&\")[0].split(\"=\")[1]}});"
]